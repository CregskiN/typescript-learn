{"version":3,"sources":["Pages/Home/components/Board.tsx","Pages/Home/index.tsx","Pages/Login/index.tsx","App.tsx","index.tsx"],"names":["Board","props","data","className","option","title","text","tooltip","trigger","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","yAxis","series","name","stack","Home","useState","isLogin","setIsLogin","setData","useEffect","axios","get","then","res","console","log","message","error","catch","err","onClick","e","success","to","Login","islogin","setIslogin","loginState","initialValues","remember","onFinish","values","password","post","qs","stringify","headers","Item","rules","required","prefix","LockOutlined","placeholder","htmlType","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5351daa2.chunk.js","sourcesContent":["import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts';\nimport './Board.css';\n\ninterface CourseInfo {\n    title: string;\n    count: number;\n}\n\nexport interface Data {\n    [key: string]: CourseInfo[];\n}\n\ninterface Props {\n    data: Data\n}\n\nconst Board: React.FC<Props> = (props) => {\n\n    const {\n        data\n    } = props;\n\n    const getOption: () => echarts.EChartOption = () => {\n        return {\n            title: {\n                text: '学习情况统计图'\n            },\n            tooltip: {\n                trigger: 'axis'\n            },\n            legend: {\n                data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\n            },\n            grid: {\n                left: '3%',\n                right: '4%',\n                bottom: '3%',\n                containLabel: true\n            },\n            toolbox: {\n                feature: {\n                    saveAsImage: {}\n                }\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '邮件营销',\n                    type: 'line',\n                    stack: '总量',\n                    data: [120, 132, 101, 134, 90, 230, 210]\n                },\n                {\n                    name: '联盟广告',\n                    type: 'line',\n                    stack: '总量',\n                    data: [220, 182, 191, 234, 290, 330, 310]\n                },\n                {\n                    name: '视频广告',\n                    type: 'line',\n                    stack: '总量',\n                    data: [150, 232, 201, 154, 190, 330, 410]\n                },\n                {\n                    name: '直接访问',\n                    type: 'line',\n                    stack: '总量',\n                    data: [320, 332, 301, 334, 390, 330, 320]\n                },\n                {\n                    name: '搜索引擎',\n                    type: 'line',\n                    stack: '总量',\n                    data: [820, 932, 901, 934, 1290, 1330, 1320]\n                }\n            ]\n        }\n\n    }\n\n\n    return (\n        <div className='board-box'>\n            <ReactEcharts option={getOption()} />\n        </div>\n    )\n}\n\nexport default Board;","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, message } from \"antd\";\nimport \"./index.css\";\nimport axios from \"axios\";\n\nimport Board from \"./components/Board\";\n\n// const Home: () => JSX.Element = () => {}\nconst Home: React.FC = (() => {\n    const [isLogin, setIsLogin] = useState(true);\n    const [data, setData] = useState({});\n\n    useEffect(() => {\n        axios.get(\"/api/isLogin\")\n            .then(res => {\n                console.log('HomePage登陆状态检测', res);\n                if (!res.data?.data) {\n                    message.error('请先登陆！');\n                    setIsLogin(res.data.data);\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }, [isLogin]);\n\n    const handleLogout = (e: React.MouseEvent) => {\n        axios.get('/api/logout')\n            .then(res => {\n                if (res.data?.data) {\n                    setIsLogin(false);\n                }\n            })\n    }\n\n    const handleCrollow = (e: React.MouseEvent) => {\n        axios.get('/api/getData')\n            .then(res => {\n                if (res.data?.data === '爬取成功！' && res.data?.success) {\n                    const { data } = res.data;\n                    message.success(data);\n                }\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    const handleShow = (e: React.MouseEvent) => {\n        axios.get('/api/showData')\n            .then(res => {\n                if (res.data?.data) {\n                    \n                    setData(res.data.data);\n                }\n\n            }).catch(err => {\n\n            })\n    }\n\n\n    if (!isLogin) {\n        return <Redirect to='/login' />\n    }\n\n    return (\n        <div className=\"home-page\">\n            <div className='home-btns'>\n                <Button type=\"primary\" onClick={handleCrollow}>爬取</Button>\n                <Button type=\"primary\" onClick={handleShow}>展示</Button>\n                <Button type=\"primary\" onClick={handleLogout}>退出</Button>\n            </div>\n\n            <Board data={data} />\n        </div>\n    )\n\n});\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { LockOutlined } from \"@ant-design/icons\";\nimport { Callbacks } from \"../../../node_modules/rc-field-form/lib/interface\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { Redirect } from 'react-router-dom';\n\nconst Login: React.FC = (() => {\n    const [islogin, setIslogin] = useState(false);\n\n    useEffect(() => {\n        axios.get(\"/api/isLogin\")\n            .then(res => {\n                console.log('LoginPage检测登陆状态', res);\n                if (res.data?.data) {\n                    const loginState = res.data.data;\n                    if (loginState) {\n                        setIslogin(loginState);\n                    }\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }, [islogin]);\n\n    const onFinish: Callbacks[\"onFinish\"] = values => {\n        const { password } = values;\n        axios.post(\"/api/login\", qs.stringify({\n            password,\n        }), {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n        }).then(res => {\n            console.log('提交', res);\n            if (res.data?.data) {\n                const loginState = res.data.data;\n                if (loginState) {\n                    setIslogin(loginState);\n                }\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n    };\n\n    if (islogin) {\n        return <Redirect to='/' />\n    }\n    \n    return (\n        <div className=\"login-page\">\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"请输入密码\",\n                        },\n                    ]}\n                >\n                    <Input\n                        prefix={\n                            <LockOutlined className=\"site-form-item-icon\" />\n                        }\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                    >\n                        登陆\n                        </Button>\n                </Form.Item>\n            </Form >\n        </div >\n    )\n\n\n\n});\nexport default Login;\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from './Pages/Home';\nimport Login from \"./Pages/Login\";\n\nconst App: React.FC = () => {\n  return (\n    <Fragment>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/login\" exact component={Login} />\n        </Switch>\n      </Router>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}